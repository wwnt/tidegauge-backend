package main

// VisibilityCode 编码表数据结构
type VisibilityCode struct {
	Visibility float64 // 能见度
	Code       int     // 电码
}

// 生成能见度对应的电码表

var visibilityCodes = []VisibilityCode{
	{0.0, 0}, {0.1, 1}, {0.2, 2}, {0.3, 3}, {0.4, 4}, {0.5, 5},
	{0.6, 6}, {0.7, 7}, {0.8, 8}, {0.9, 9}, {1.0, 10}, {1.1, 11},
	{1.2, 12}, {1.3, 13}, {1.4, 14}, {1.5, 15}, {1.6, 16}, {1.7, 17},
	{1.8, 18}, {1.9, 19}, {2.0, 20}, {2.1, 21}, {2.2, 22}, {2.3, 23},
	{2.4, 24}, {2.5, 25}, {2.6, 26}, {2.7, 27}, {2.8, 28}, {2.9, 29},
	{3.0, 30}, {3.1, 31}, {3.2, 32}, {3.3, 33}, {3.4, 34}, {3.5, 35},
	{3.6, 36}, {3.7, 37}, {3.8, 38}, {3.9, 39}, {4.0, 40}, {4.1, 41},
	{4.2, 42}, {4.3, 43}, {4.4, 44}, {4.5, 45}, {4.6, 46}, {4.7, 47},
	{4.8, 48}, {4.9, 49}, {5.0, 50}, {6.0, 56}, {7.0, 57}, {8.0, 58},
	{9.0, 59}, {10.0, 60}, {11.0, 61}, {12.0, 62}, {13.0, 63}, {14.0, 64},
	{15.0, 65}, {16.0, 66}, {17.0, 67}, {18.0, 68}, {19.0, 69}, {20.0, 70},
	{21.0, 71}, {22.0, 72}, {23.0, 73}, {24.0, 74}, {25.0, 75}, {26.0, 76},
	{27.0, 77}, {28.0, 78}, {29.0, 79}, {30.0, 80},
}

// 查找能见度对应的电码
func findVisibilityCode(visibility float64) int {
	for _, v := range visibilityCodes {
		if visibility <= v.Visibility {
			return v.Code
		}
	}
	// 当能见度超过 30 km 时返回 80
	return 80
}
